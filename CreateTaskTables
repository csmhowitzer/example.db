CREATE TABLE Projects (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    Name TEXT NOT NULL,
    Description TEXT,
    StartDate TEXT,
    EndDate TEXT,
    OwnerId INTEGER NOT NULL,
    FOREIGN KEY (OwnerId) REFERENCES Users(ID)
);

CREATE TABLE TaskStatus (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    Name TEXT NOT NULL UNIQUE
);

CREATE TABLE Priorities (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    Name TEXT NOT NULL UNIQUE,
    Level INTEGER NOT NULL -- e.g., 1 for High, 2 for Medium, 3 for Low
);

CREATE TABLE Tasks (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    TaskName TEXT NOT NULL UNIQUE,
    Description TEXT,
    StartDate TEXT,
    DueDate TEXT,
    ProjectId INTEGER NOT NULL,
    StatusId INTEGER NOT NULL,
    Estimate INTEGER,
    PriorityId INTEGER NOT NULL,
    CreatedDate TEXT NOT NULL,
    ModifiedDate TEXT NOT NULL,
    FOREIGN KEY (ProjectId) REFERENCES Projects(ID) ON DELETE CASCADE,
    FOREIGN KEY (StatusId) REFERENCES TaskStatus(ID) ON DELETE CASCADE,
    FOREIGN KEY (PriorityId) REFERENCES Priorities(ID) ON DELETE CASCADE
);

CREATE TABLE TaskAssignments (
    TaskId INTEGER NOT NULL,
    UserId INTEGER NOT NULL,
    AssignedDate TEXT NOT NULL,
    PRIMARY KEY (TaskId, UserId),
    FOREIGN KEY (TaskId) REFERENCES Tasks(ID) ON DELETE CASCADE,
    FOREIGN KEY (UserId) REFERENCES Users(ID) ON DELETE CASCADE
);

CREATE TABLE Comments (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    TaskId INTEGER NOT NULL,
    UserId INTEGER NOT NULL,
    Comment TEXT NOT NULL,
    CommentDate TEXT NOT NULL,
    FOREIGN KEY (TaskId) REFERENCES Tasks(ID) ON DELETE CASCADE,
    FOREIGN KEY (UserId) REFERENCES Users(ID) ON DELETE CASCADE
);
